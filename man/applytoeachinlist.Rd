% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/applytoeachinlist.R
\name{applytoeachinlist}
\alias{applytoeachinlist}
\title{Apply a function to each member of a list}
\usage{
applytoeachinlist(
  listobject = NULL,
  applyfun = NULL,
  applyargs = NULL,
  nameaftersplit = NULL,
  splitalongside = NULL,
  splitalongsidename = NULL,
  splitalongsidesplitter = NULL
)
}
\arguments{
\item{listobject}{A named list object containing elements to which
the applyfun will be applied.}

\item{applyfun}{The character name of a function to apply.}

\item{applyargs}{A named list of arguments supplied to applyfun.}

\item{nameaftersplit}{The name of the argument of applyfun that
takes the settosplit dataframe after it has been split; this is
commonly 'x' or 'data'}

\item{splitalongside}{An optional dataframe that should be split alongside
the listobject, containing the factor variable splitalongsidename. For
example, if listobject is a list of regressions, then splitalongside
may be a set of newdata, indexed so that predictions for each regression
depend only on some subset of splitalongside}

\item{splitalongsidename}{what should the splitalongside frame be called after
it has been split? This is commonly something like "newdata"}

\item{splitalongsidesplitter}{The name of the factor variable in settosplit, over
which it should be split.}
}
\value{
This function returns a named list of results, having applied
  applyfun to settosplit for every level of the 'over' variable. So for
  example, applytoeachinlist(...)[["a"]] is the result of applyfun(listobject[["a"]]).
}
\description{
Apply a function to each member of a list
}
